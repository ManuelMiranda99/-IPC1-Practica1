
package ipc1.practica1_201807394;

import java.util.Random;
import java.util.Scanner;

public class IPC1Practica1_201807394 {

    public static void main(String[] args) {
        logica lg = new logica();
        lg.asociarImgs();
        lg.pkIniciales();
        lg.encabezado();
    }
    
    public void Encabezado(){
        System.out.println("Hola");
    }
    
}

class logica{
    //Declaracion de variables y objetos usados en la mayoria de metodos
    String opt, j1, j2;
    Scanner leer = new Scanner(System.in);
    Random rdm = new Random();
    
    //Variable contador cada vez que se agregue un Pokemon
    int c = 6;
    
    public String mPk[][] = new String[20][4];
    String iPk[] = new String[20];
    
    public logica(){
        
    }
    
    //Metodo para asociar las imagenes a una posicion de matriz
    public void asociarImgs(){
        iPk[0] = "                                               (   ,       \n" +
"                                             /##,%#,       \n" +
"                             *(################/##(/(*     \n" +
"                         (%%%%%###################/(/      \n" +
"                       ###########,#%##%##########*(/      \n" +
"       (%#/.         *((#######(,*/##############(*((.     \n" +
"      %%%%#,#%%%%%%%%%%%#(/*(%%%%%#/#############((/((     \n" +
"     #%%%%&%%%%%%%%#(/#%%%%%%%%%%%#/###########((((*(((    \n" +
"     *%%&&&&%(/((////(%%%%%%%#%%%%#(/####(((((((((((*(((,  \n" +
"    #%%%%%%%,/////*#%%%%%%%%%%%%%%#(*((((((((((((((((*(((. \n" +
"   %%%%%%(*#%%/*#%###%%%%%%%%%%%%###(,(((((((((((((((/(((( \n" +
"  #/%#%*/###%%%%%%%#%%%((,**%%%#(((*#,(((((((((((((((((((\n" +
" (@%(*%####%%%*/,#%%(%%#%@/(//*%#(((#*#((,(((((((((((((((((\n" +
"*#@*/(%%%%%%////*%%%%%%@@%/(@@/,((((((((**/./(((((((/((((((\n" +
"%&@*/(%%%%%%%%%/#%%###/@@(//@&/*(((((((((*////,/(/*((((((((\n" +
"#(#*(/%%%%%%%%%##%%#%%%@@&//((((((((((((((*/////*,((((((((,\n" +
"(#%%%%%%%%%%%%%%%%%%%%,%&%///(##(((((((((((*////*((,(((((. \n" +
" ((*/###%%%%/%%%%%%%%%##%%###(*/((((((((((((((((((((/*/,   \n" +
"   .((,/.**/(((((/*******/,/(((((((/((####(((((((##(((     \n" +
"      ,((*/##########((/,((((###//#%%%%%%##/((/#%%#(((/    \n" +
"       %%(*(((//***/((((((((**(/%%%%%%%%%##**##*///((((,   \n" +
"       ##%%%###(/**,*/((((/((//%%%*(/%%%###.#*(///*(((((   \n" +
"       *#*((*##((//((((///(((*#//*%*(%%%##/#%#///*,(((((   \n" +
"        /(((*#####((( .((((//(((((%%%%%###/(((((,*(((((/   \n" +
"         /**####(##(    ,(((.//(*%%%%###(/*((((((((((((    \n" +
"          ###(#(##/       .*//**%%%####*   /((((((((((,    \n" +
"          .&*(&,/           #%%%%####*      */(/*(**(      \n" +
"                              &%.&/                       ";
        
        iPk[1] = "                    /#%%%%%%#*                              \n" +
"                %&&&&%%%%%%%%%%#                           \n" +
"             .%#%%%%%%%%%/#%%#####                         \n" +
"             %#%%%%%%%%%%.@@@/#####.                       \n" +
"            **%%%%%%%%%%.   .*##((((                       \n" +
"            ,#%%%%%%%%%#.  .((((((((*                      \n" +
"           ##%%%%%%%%%%#/((#(/(((((((                      \n" +
"          *#%%%##%%%%%%%%%%%#(((((((*                      \n" +
"           (//*/((((((((/*****((((((                       \n" +
"            *((((((((((((((((((((((*                       \n" +
"              *##((((((((((((((((,%**                      \n" +
"             ./(**((((((((((((/*,/#*(#                     \n" +
"        ,%%%%%#%&%##########/%%%#(((**(/                   \n" +
"     (%%%%%%%*%&&&&%######/%&&%%##(((((//                  \n" +
" /#(##%%%%%%/&&&%/%&&&&%%(%%%%%%%#(((,(((.                 \n" +
"  /(,(%%%%%#&&&&&&&&(&&&%#%%%%%%####*%((##                 \n" +
" #(((((((((.&&&&&&&&/&&&/%*#(%#####*%%((##                 \n" +
"           %(&&&&&&&/&&*%#(((##%/#.%&/((##                 \n" +
"           %&%&&&&&&%&&&&(*((((*##(%@/((((                 \n" +
"           /%&&&(*(#%%%%%%#%####(%&//((*      /#%%%#,    \n" +
"           .(&&&&&&%&&&&&&&&%#####*%%*////   /%%%%%%%#((/  \n" +
"          %%/&&&&&&%%&&&&&%###(%%%%%/%///  *#######((((((( \n" +
"         &&%%(%%&&&&%&&%%###/%%%%%%%%#./  (((((((*(((*(((( \n" +
"        %&&&%%#/##//((#####*%%%%%%%%%%( (((((((((((((((((( \n" +
"        %%%%%#(((*#######/*(%%%%%%%%%%(,(((((((/(((((((((, \n" +
"        ####((((((    ((#(/,%%%%%%%%%#(,((((((((*(((((((   \n" +
"      .%##(((((((            ####%%%#((,/((((((((((/*,     \n" +
"       //.#((*               ,(((((((((.                   \n" +
"                              #((((((((*                   ";
        iPk[2] = "               (%%%%%%/                                    \n" +
"            %&&%%%%%%%%##                                  \n" +
"          (%&&%%%%%%%%%%#(,                                \n" +
"         %%%%%%%%%%%%%%#/((*                               \n" +
"        .*%#%%%%%%%%%#%#@ *#                               \n" +
"        .@%%%%%%%%%%%%%*@..(/                              \n" +
"        ,./%%%%%%%%%%%%,..*/#                              \n" +
"        *,*%%%%%%%%%%%%,/**##                              \n" +
"       ,%%%%%%%%%%%%%%%%#####.                             \n" +
"       (/#%%%/%%%%#%%%%(/*/((                     ,#,,     \n" +
"        (#/,,/##(/**/(((/(#(,                   . ((#,     \n" +
"          .##*/((#%%%%%*###/                   *%/(#(,     \n" +
"               /((//(##((#(                    /&%##%(     \n" +
"             *%##(#(/((((##%%%%(.              *###(%%#*   \n" +
"         /%%%%%/%#&%&&%(#%%%%%%%%%%%/ /#      .##(%    \n" +
"   ,(%%%%%%%%%%(&@@@@@@@%%%%%%%%%%%%%###(    /&&&&&#   \n" +
"     (%%%%%%%%(&@@@@@@@@@@/%%%%%%%%#**#*     ,%&&%&&#,   \n" +
"     ,        /@@@@@@@@&@@@/%#(.               ,%&&(,    \n" +
"              &@@@@@@@@@@@@@/%%%%                ,((**     \n" +
"              &@@@@@@@@&@@@@&%%%%%                %,       \n" +
"              @@@@@@@@&&&@@@@#%%%%%              #%        \n" +
"            /%(@@@@@@@@&&&&&&(%%%%%%*          *((*        \n" +
"          .%%%%%&&&&&&&&%%%%(&&&%%%%%(      *((((#         \n" +
"         *&&&%%##&&&&&&&&&&%%&&%%%%%%#,((((((((//          \n" +
"         &%%%####(#&&&&&&&&%%%%%%%##(((((((/#            \n" +
"         ##(########(*(&&&&#########(*//#%,              \n" +
"          #(######.           /########                    \n" +
"       #/&((#(((#/              #######/                   \n" +
"       *%.&/                     ##(((#.%%                 ";
        iPk[3] = "            .                                              \n" +
"          .                                                \n" +
"         .  (                                              \n" +
"         .&&&                                         /@&  \n" +
"        %&&&&                      /,    ...        #@@@@* \n" +
"        &&&&%                #&&&&&&     .       .&&@@@@&& \n" +
"       .&&&&*            *&&&&&&&&&             &&&&@&&&&&,\n" +
"        &&&@@@@@@&&&&&%%&&&&&&&&&&.          .&&&&&&&&&&&&%\n" +
"       #@@@@@@@&/@ (&&&&&%%%%#             ,&&&&&&&&&&&&&&&\n" +
"     /##@@@&&&&&  ,/&&&&&&%.              &&&&&&&&&&&&&&&&&\n" +
"    ,  %&&%&&&&&&&&&(#(%&&&&            #&&&&&&&&&&&&&&%   \n" +
"    (&&%(//*//(&&&##(/&%%&&         .&&&&&&&&&&&&      \n" +
"    #/&&&&///*,&&&&/(((/%%%%%#         ,&%%%%%&&         \n" +
"     (#&&&&(/#(&&&%%%#%&&&%%%%/         ,%%%%%#            \n" +
"      *%&&%%&&&&&&&&&&&&%*##%&&(          %%*              \n" +
"       ,(%&&%%&&%%&&&&&,&%%(#&&&*        ,###.             \n" +
" ,(&&&&&&&&&&&&&&&&&&&%#%#%%%&&&     (#####              \n" +
"%%#&&&&&&&&&&&&&&&&&&&&&&&&%&&&&&,  ####                 \n" +
"/(%&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&/   #(,                \n" +
"           .&&&&&&&&&&&&&&&&&&&&&&&&&/   *//               \n" +
"            &&&&&&&&&&&&&&&&&&&&&&&&&&%*//                 \n" +
"            #&&&&&&&&&&&&&&&&&&&&&&&&%%(/                  \n" +
"            *&&&&&&&&&&&&&&&&&&&&&&&&%%#                   \n" +
"             &&&&&&&&&&&&&&&&&&&&&%%%%%#                   \n" +
"             *&&&&&%%%%%%%%%%%%%%%%%%%%.                   \n" +
"               *%%%%%#,       (#%%%%%#,                    \n" +
"                  *((.             *((#                    \n" +
"                    %               .#/                    ";
        iPk[4] = "                              ,#&&/./                      \n" +
"                            &@*,                           \n" +
"                          ,&&,@                            \n" +
"                    *.   /&&,,                             \n" +
"                 #* /#,&&,,                              \n" +
"                ,#&@&&&%,,,,#                              \n" +
"               ,%@&%&@,,,,.                                \n" +
"               (&&/.&&,**                                  \n" +
"                 **##(##                                   \n" +
"                    #%&                                  \n" +
"                 *(&&&@&@@%.*                              \n" +
"                 *@&&&&.   ./   ..  (.    #(*              \n" +
"                *(%*&&&@&. .*(/.     &(#&//                \n" +
"                .*,%&&%    ***      ./(/                   \n" +
"               .**/&&&&/ ,*,,*,   ,%%%/*     .#%#/.        \n" +
"            ./##%%%%#%%&&&&&&&%# #(%##/&&%####*.           \n" +
"            @&&&&&&&%##%&&%%##&%#(##(%/#(((/,.@            \n" +
"           &%@&%#####%&&&&&%(#(###&(....,,               \n" +
"       ,&&%&&&....,//(###%&&&/###%%##.                   \n" +
"        ##(/&&&*     .*,.(##(///##(%//                     \n" +
"        ,//#&&@/*    .***./*..//#(#/##/                    \n" +
"          %&&&////  .,,.  .//.,(##/###/#(,                 \n" +
"         /#&,  ,*/*,*.*,   //*%/(* ####((                  \n" +
"         %(,    .**   .*,  .%#*#%,  ####.                  \n" +
"        *.        ,,        ./*/%,  (##(                   \n" +
"                            ,*//.* (###(                   \n" +
"                            ,/,   ./##(                    \n" +
"                          ./(,   .###*                     \n" +
"                          */.   .##.                       ";
        iPk[5] = "                       ,%@@@@@&*                           \n" +
"                     &@@@@@@@@&&&&*                        \n" +
"                   %@@@@@@@&&&&&&&&(                       \n" +
"                  &&@@&@@&&&&&&&&&&&,                      \n" +
"                 /&&&&&&&@&&&&&&&&&                      \n" +
"                 .%&&&&&&/*&&&&&&&&&*                      \n" +
"                #&&&&&&&&&&&&&&&&&&%                       \n" +
"               /&&&&&&&&&&&&&&&&&&&                        \n" +
"            (%%/#&&&&&&&&&&&&&& *                        \n" +
"           .&(,%&%#&&&&&&&&&*     .                        \n" +
"            %%#..*##(&&&%        *                         \n" +
"             %%#*..##/%         ,                          \n" +
"          %%%%#/########/      *.     ,#%%%%%%#/           \n" +
"        %%(%%%%%%#/**##/##   ./*  /%(/#%%%%%#/*#%%#        \n" +
"      #(%%%%%%%%#########*( ,#(/(#%%%%%%%%%%%%%%%%(#%      \n" +
"     /%%%%%###############((#/%%%%%%%%%%%%%%%%%%%%%%%#,    \n" +
"         (###############*###%%%%%%%%%%%%%%%%%%%%%(        \n" +
"            (#########/  #%#. %%%%%%%%%%%%%%%%%%           \n" +
"                        *%#/    #%%%%%%%%%%%%#             \n" +
"                        ###        (######.                \n" +
"                        ##(                                \n" +
"                        ((/                                \n" +
"                        ///                                \n" +
"               /#/    */.//                                \n" +
"            ,             //                ,  .           \n" +
"         ..                ./              .,              \n" +
"       ,                      **         ,                 \n" +
"                                                           \n" +
"          *                                                ";
        iPk[6] = "                .#&&%%%##//*.                              \n" +
".%%(.       /%&&&&&&&*/#%#((*##(                           \n" +
"(#####(  ,%%%%&&%//#%%##(((/*######                        \n" +
" /(((#####*./,/###((((////,/(%&@@@(##                      \n" +
"     ./(((((((((//*,/######(&% *//,&%(                     \n" +
"     %###(*////*##########/&&  */////%(                    \n" +
"    /#####(///,###########(&(     .. &,(                   \n" +
"    ########/(############(&&        &*#                   \n" +
"    #######(****(##########(&&*     &/##.                  \n" +
"     ##*(%%%%%######,(#######(/&&&&/((#(                   \n" +
"     (,#%&&&%%########,((########((((((*%#                 \n" +
"      #%&%*%%%#(*#####(/(((((((((((((((##%#                \n" +
"      ##/%%%#######(#((( *(((((((((((,####%,               \n" +
"       /###########((((,    /((((((.######%%               \n" +
"        ,########((/((      (((##########%%%               \n" +
"            /((((*./%%%%%%./(((#####&&%#%&%#               \n" +
"           #&&&&&&&&&&&%%%%(((#####&%####&%*           *&&,\n" +
"           (&&&&&&&&&&&&&%%/((########%%/           &&&&%\n" +
"          @&%&&&&&&&&/@&&&%*(####%&%&%#(           .%%&&%\n" +
"          &&&%/&&&&&&&(&&&&&%(((#######(             (%%%%/\n" +
"           #%%#&&&&&&&%#%%%%%*((/,**,*               (%%%# \n" +
"              (//%%%%%#*(**/%/((##%(               ,%%#  \n" +
"              &&&&&&&&&%##%%%#,(#####,                #(   \n" +
"              #&&&&&&%%##/###*,(####,##.             ((    \n" +
"              &(#%%%%%%%#&&&%%*(##/(((%#%#         (#(     \n" +
"               (%#,/#%%%*&&%##/#*((((((((#(*((###,(#((     \n" +
"                     #%##%#######(/((((((((,(#((#(*(*      \n" +
"                       /%%%%%%###(/#(,/(((/((((((,/        \n" +
"                           ,/*/#####(((((*######.          ";
        iPk[7] = "                                 #                         \n" +
"         (          .            (                         \n" +
"        #          .%(  ##/(%##/.                          \n" +
"        (   ,%##./%&%%(%#                                  \n" +
"                .%%%%%%%%#*                                \n" +
"                ,%%%%%%,%%#          %%,                   \n" +
"                 #%%%%#/%##/        ,*//*#                 \n" +
"                ,&%%%%%%/(##        /(///(/,               \n" +
"                /%%%%%%#/####      *(((/(((/#              \n" +
"        ,&*#   //***#%%(#(%%%.   */((((/((((((             \n" +
"       /%%%%#*,/*/**&%%&&%%%%%**///((((/(((((/*            \n" +
"        %%%#####((/@&&&&&%%%&%%(////(((//,   //            \n" +
"         ,#####((/%%&&&%(%%%&&%%%     .       *            \n" +
"                ,@@@@@@%%/%%%%%%/           /            \n" +
"               (@@@@@@@%%%%%%%%%%(                       \n" +
"              #@@@@@&%%%#%%%%%(%%%%%%              .*      \n" +
"             /@@@@@@@@@&%%%%%%#/%%%%%#            ##,      \n" +
"            ,%&@@@@@&&%##%%%%##%(%%%#(          ((((       \n" +
"           /%&@@@@@@@&&&%%%%%%%(%#*        /(((((        \n" +
"          .&%#@@&&&%%&&&@@(%&&%%%%%%****/((((((((/         \n" +
"          /%%%#&&&&&&@@&&%&&%%%%%%%(((((((((((.          \n" +
"           %%%%%@&&&&&&&@@#%%%%%%%%%%/(((((((/*            \n" +
"            %###(&%%####&&%%%%%%%%%%%/((((*#*              \n" +
"             *((((/(%%%###/#/########/(/#/                 \n" +
"              ,/(((((  /(((###/(####(*                     \n" +
"         *#%%%%#(((            ,####                       \n" +
"        ,&%#%%%%(              ######                      \n" +
"                              #%%%%%%%.                    \n" +
"                               %%(#%/%/                    ";
        iPk[8] = "      #                                                    \n" +
"      ,#,                                                  \n" +
"     * .*(                                                 \n" +
"     /.,,,(                                                \n" +
"     *.,,,,#                                               \n" +
"      ,,,,,,/                                              \n" +
"      /.,,,.(                                   ,.         \n" +
"       / ., ./   ,(  .%               ,/((/,. .(           \n" +
"        (    #  ########,/       *#* .,,,,,,.(*            \n" +
"         ,/ /(##############  ,#.   .,,,,,,(.       .      \n" +
"           *(((#########(((#/(     ...,,,(        .&&      \n" +
"           ,###(((((((((((((((,     ,/(/        *&&&&*     \n" +
"           (( @ (((((((#/(((((/          .*(%&&&%%%%%#     \n" +
"           (,   ((##((((.@,(((*      ////////((//%&&%#     \n" +
"           #/,.*(((((((,   *((     //////////////#&&&/     \n" +
"        *&/((((((#(####.. .((,    ///////////////%%%&      \n" +
"      (&&&&/(((((((##((#(((((%&/ *//////////////(////      \n" +
"      @@&&&&&/((((###((((((((%%%%,*///////////////**       \n" +
"     (&&@&&&&&&(**///*/(%%%%%%%*,****////////****        \n" +
"      %&&@@&&&&&&%%%%%%%(%%%%%%%(***************         \n" +
"       (%&&@@@@@@&&&&&&%#%#%%%%%*/((/***********           \n" +
"          #&&&&&&&@&@&&%#%#%%%%*(((((,*****,               \n" +
"           (%(%&&&&&&&%#(%##(/(((((((*                     \n" +
"            ,(#%%%%%%%%#*(/(((/((((((,                     \n" +
"             (((*%%(/**(((*,,. ((((((                      \n" +
"              (((**((((((/***.  ##((#@                     \n" +
"              (((((##((((,**.  .##(#*                      \n" +
"              /(##/##(((*/*   (#(((,                       \n" +
"             .(###(####*      /((((                        ";
        iPk[9] = "               @&@@@%                                      \n" +
"              &%....(&@@.   *&@@@@@.                       \n" +
"              &(......*&@@@@@@@@@@@@@@                     \n" +
"              ......(@&@@@@@@@@@@@@@@                    \n" +
"              &&..%@@@@&&@@@@@@@@@@@&&&&.                  \n" +
"              &&@@@@@@&&&@@@@@@&%%%%&&&&@@&%%%%%%,,@       \n" +
"             ,@@@@@@@@&%&&&@@@@&@&%&&@@@@@@&&%%####&&@@%   \n" +
"            &&@@/,,(*&%&&&&&&&&&&@@@@@@@@&&*........@&   \n" +
"           %&@%*,,&@*/@##%%%%%#&@@@@@@@@@@&&*......&&&   \n" +
"          #&@@**,,,,,%@@@&&%##%&&@@@@@@@@@@@&&%....%&&&    \n" +
"     &@@@@&&@@#////(&@@@@@@@@@@@%,,,**@@@@@@@&#&&&%      \n" +
"     &%&&&&&&&@@@&&@@@@@@@@@@@@/**,*@@%%@@@@@&&&&&%&       \n" +
"       @%%&&&&&&&&@@&@@@@@@@@@@***,,***/@@@@&&&&%&         \n" +
"         &&&&&&&&&&&&&(%&%@@@&@@/(//*//@@@@&&&&&           \n" +
"         &%&&&&&&&&&&&&@@@@@@@&@@@%#%@@&@&&&&&&&           \n" +
"          &%&&&&&&&&&&&&&&&@@@@@@&&&&&&&&&&&&&&&           \n" +
"          @&%%%&&&&&&&&&&&&&&&&&&&&&&&&&@@&&&&&            \n" +
"           &%%%%%%%%&&&&&&&&&&&&&&&&&&%&&@@@&&             \n" +
"            @&%%%%%%%%%%%%&&&&&&&&&&%%%##%&@@              \n" +
"              &&%#####%%%%%%%%%%%%%%%%%##%#(%&@            \n" +
"                 %%#############%%#####%#*(%&@@@           \n" +
"                 ##((###############%%((((#%&&&%           \n" +
"                #####(((( %%%%%%%                          \n" +
"                #%%%##((                                   \n" +
"    .............####((.................                   \n" +
"       ...........,**....................                  ";
        iPk[10] = "                                     ,%%##,                \n" +
"                                    #%%%%###               \n" +
"                                   %%%%%%#(((/             \n" +
"                                  %&%%%#(/((((((.          \n" +
"                                  %%%%#(/((((((##          \n" +
"       #%#/.                   ,   ##((((((((((((/         \n" +
"    .###(..         .   /(    .#   %#((((((((((((((        \n" +
"   (##(,,**          #,  #*   #*  .&%((((....,((####(      \n" +
"   (((////*           #/ /#*.#/. /( /#(*.......#####(      \n" +
"   /(((*/(((       (#*.##%%#(**(*//@.**,/.....,###((/      \n" +
"   .((((/(((.       .((##%##(@@@&%/@@#  (..,,*,#((((       \n" +
"   ,((((((((     @*@@&####@%((///&&&% ,*,***((/((/%      \n" +
"    .((/(#*     ,&&(#%#%%%%%%%/#*/&&%%%(#/,**#(((///       \n" +
"       .%&,  */(*@@@&&&%(/(#%&&@@@&%%%*(#((((((((/         \n" +
"         #@#%&&%*&@@@&@&&&&&&@@&%%%(#%%((((((((/&@*        \n" +
"      /  (*  /((###%%%%%%%%%%%#%%%%%%*/**(/  (* (#(      \n" +
"   .&%*  /(/        #&%%#%%%%%#%&&            .(* ###.   \n" +
"&(##/                                             (/(*#/#%%";
        iPk[11] = "                             #*                            \n" +
"                      &*     (*,                           \n" +
"                       #/.   /**,                          \n" +
"                       %,/, #* ,*(                         \n" +
"                       @****,/****.  ..                    \n" +
"                        ##(,,///**,..,,,,,.*               \n" +
"                      #/(##,,/*...... .*,.,,/              \n" +
"                    %/*..#/,..&*..,*....*                  \n" +
"                    (,./.%(,.,*,,*  &*,,                   \n" +
"                    ,..,*,%%#((###%  @#,....               \n" +
"                 ##*, .,#*&%#(.,..,  &***,.,..             \n" +
"                 @#,.  ,##%.,.//(***,,.....,/            \n" +
"                  /*,...%&&%#...,   (**.,./%//,            \n" +
"                   ./***.@&#%           (/*,,,*(         \n" +
"               ##///(///*,,,/#%&        &(*,*,,,,,*        \n" +
"              %#/**///////**,..,*      (**,,,,*/*,,,(      \n" +
"             #(/*,..///////***,,**.*/***,,,(               \n" +
"                &*,..**////***,,,,,,**,,*                  \n" +
"                 *,,. *******,,,,,                         \n" +
"                  #*, (#/**,,*****#                        \n" +
"                 &*,., (/****//**#                       \n" +
"                 *,..,   #(**,,,,,,(                       \n" +
"               #/*,,.     %/*,......                       \n" +
"             ,//,*,,,         ,.,,,,/                      \n" +
"             %,,,.*,            (*,,                       \n" +
"                                *,,,                       \n" +
"                              ./*,.                        \n" +
"                          ,/*,,,,,.                        \n" +
"                          *,......                         ";
        iPk[12] = "                     /&&.                                  \n" +
"                  #&&&&%                                   \n" +
"               *&&&&&                                    \n" +
"            .########       .#&&(                          \n" +
"           ########  /&&&&&&&&&&%                          \n" +
"         ####/&&&&&&&&&&&&&&&*                         \n" +
"       ######,&&&&&&&&&&&&&&&&&&&&*                        \n" +
"     /##*      &&&&&&&&&&&%@,&&&&                        \n" +
"    ((.        &#%#&&&&&%(@***&&                       \n" +
"  .#          .&&@%((&&&&&&(@&/&&&.       .,*//(((####(/.  \n" +
" .(            %&(@/(&&&&&&&&%%%* ,((/,                  ,/\n" +
".(               &&&&&&&&&&&&*##/,,,*,                    #\n" +
"(                   .*#&&&%/####%&&&&&&&&(              *# \n" +
"/*             .//,   *%%%#%##%&&&&                   *#,  \n" +
"  ./(((((((/*       %&&&/ . &&&&&&&&*               *#.    \n" +
"                    .       &&&&&&&&&&&,.        ,(/       \n" +
"                           .&&&&&&&&&&&&&%     //          \n" +
"                           /&&&&&&&&&&&&&&&/(/             \n" +
"                          ,#&&&&&&&&&&&&&%               \n" +
"                          /&&&&&&&&&&&&&&%               \n" +
"                          *&&%&&&&&%#((######              \n" +
"                          *#/##(#%%%#/    /%%#             \n" +
"                           ###,            %%%(            \n" +
"                           #%%%.           /%&&(           \n" +
"                            %%%%*           &&&&.          \n" +
"                            /&&%%,          %&&&&          \n" +
"                             ##%%.          /&@@@&         \n" +
"                                            ,&&@@@#        \n" +
"                                            *&%&%        ";
        iPk[13] = "                              ,&&    #,                  \n" +
"                              (&&#,,%&&*                 \n" +
"                              #&&&%&&&&%#                  \n" +
"                             &&&&&&&&&&&%#                 \n" +
"                            ,&&&&&&&&&%/                 \n" +
"                   .**.      /&&&&/##&%%%,                 \n" +
"                   &&&&,     /##(%&&&&%%(                  \n" +
"                   /*###((* /#(,,##/(%%(#                  \n" +
"                   .*#%##%(#%&&(&&%(&&,                    \n" +
"               %&&(%#####(&&%%%&&&&%%(                   \n" +
"      /(####*  %/,  ,*/*  @* *&%%%&&%%(                  \n" +
"     .#/, ,/(#(               %%&%#((*##(,               \n" +
"     //,    ,/((/               @&&%%%%#  ,(%&*            \n" +
"     //.     @/((/*              /%%%%%#(   /(%%@          \n" +
"     //*      ,((((,            /&%%%%((#/    .&&,         \n" +
"     ,//.      .((((/        *&&&&&/(####/   /&&%,       \n" +
"      *///      ,(((((/.    (&&&&&&&%/(((#(%%@.%%,%.     \n" +
"       //(.      *((((((((/#&&&&&&&&%((((((#&/,#(,(%/%     \n" +
"        *(((,     *(((((((*&&&&&&&&&(((((((#%#   # #       \n" +
"         *((##(,   ,(((((((&&&%%%%%#(((((((##*             \n" +
"          .(((###.  @*((((/&%%%%%%#(((((/(##.              \n" +
"            (#####(@   ,/(/%%%%///////(###*                \n" +
"             .(####@     .%%%,,.*    /%%#                  \n" +
"                (*/     *&&&*        ,&                  \n" +
"                       #&&%*        .(#%%/                 \n" +
"                      /%%        .%%(###.                \n" +
"                     ,&/         ,%#/#####/*//,          \n" +
"                   #(&&&%#%#             .####%%#*         \n" +
"                  ,&&&&&&&&&/                              ";
        iPk[14] = "       &,                                                  \n" +
"      /&%/                                     *((%&&&     \n" +
"     # &(                               ,##(#%%%&(       \n" +
"     &&*###(                           *#*%&&&%(/%&&@@     \n" +
"     (&%(%%(/                        #/%%&&&(#(%%%&&,      \n" +
"     &(#(/%%((.                    #/%%&%&&&(%(#&&@@     \n" +
"     &%(%%(%%%/   .%##(/##,       ##%%%%%&&&(%%%%&@%       \n" +
"      ##(%%%%%#,/%(%##((####/    //%%%%&%#%&%(.(&@*      \n" +
"     /&*/%#%%(####(%#/*/*   */** (%%&&&&&&#%%&&@@        \n" +
"      .&%/(%%(#*%%/& ,/##(    .*(%&&&&%%%%(%%            \n" +
"         (#%%(***/@/%%,##(/   #(%%&&%%%%#(%%%&&/           \n" +
"        (&%(%%#&%#(%%%.((((.(/%%&&&%%%&(%%%&&%             \n" +
"          .(/####(&&&((((/#/%&&&&&&/%%%%%&&                \n" +
"            (#(%#/(#%%%(*(/%&&&&&/%%%/. .                  \n" +
"              ##(@@@@@%#((#%##/#%%//#%,                    \n" +
"                %@@@@@@@%%%%(%(%%.#*                       \n" +
"                @@@@@@@&%%%%/(.                            \n" +
"               ,@@&&&&%%%%%(/(/                            \n" +
"              #&%%%%%%%#/(@*(                            \n" +
"             (@@%%%%%%%&&*#/#(.                            \n" +
"     ((##(   (%%%%%%%%%(%(###/                             \n" +
"    &,/##%#%%##( .  .#%%%%(&&                              \n" +
"        (###           ,(**#&//*                           \n" +
"           ##          //*//%/////.                        \n" +
"          ,.          ,/((///##/////                       \n" +
"                      (((%///%%%////#(                     \n" +
"                      ##(&///*%%%%.//#(                    \n" +
"                      (#(&&(#/*&&%%                        \n" +
"                       . */&(##(%                          ";
        iPk[15] = "                                   *##((((.                \n" +
"                                   ##((,,*(((/             \n" +
"                                   (#((((///((((           \n" +
"                                    /(((///, *(((          \n" +
"                                        ..      (((        \n" +
"               *,                                ,((       \n" +
"              (,((/,                              .(*      \n" +
"             ((#////               ,**             ,(      \n" +
"            .*%##**(((/*.      /####(((             //     \n" +
"            .*/########((((( (#(/*###,(*             /     \n" +
"       */   *######(((((((((((*######/(/             /     \n" +
"         .(*((((((((((((((((((/%%%%%#/(*             /     \n" +
"       /#((((((((((((**&&&/(((((%%%%#*(  /#####((.  */     \n" +
"       *((((((((((,*%//@@#(((((/*#%%*(*(((((((((((((/,     \n" +
"        #%%%%%%%%%&&&&&&%(((/**,****,.*////((((((((((      \n" +
"        ,&%&&&%*%%%%%%%%&%(*,*/((((((((((((((((((((((.     \n" +
"     /((/@@@@//((*%%%%%&&&&%%((((((((((((((((((((((((/     \n" +
"(&&&%#((*@&@(//,((/((&&&&&&&&((*((((((((((((((((((((((     \n" +
" %&%%%#/((//(((//*###(%&&&&%((((((((/(((%&&(((((((/    \n" +
"                 %%%##/%%%%#(((((((((*#%%%%%%%%*(((((////  \n" +
"                /&&&&/%%,   ((((((((*%######%#.  ((/////(((\n" +
"                 (&&&(    .((((((((*(////           *///*//\n" +
"                         ./((((((** ./               ,((///\n" +
"                         ##/////                   *%%@#&& \n" +
"                      (/&@@/                      .# #   \n" +
"                       % *%                                ";
        iPk[16] = "                 /%(       *(/                             \n" +
"                ,##(#%(%#####/                             \n" +
"               .#/#/%########                              \n" +
"               %%%##(&(*###(                               \n" +
"                ((((////(##                                \n" +
"                  *####(##,                                \n" +
"                     (####                                 \n" +
"                     /####                                 \n" +
"                    ,*#### ((                              \n" +
"                   ,&%%###(&&&                             \n" +
"    ,              ./%%###(,,                              \n" +
"     %/          ,%#%%######%*           ,#.               \n" +
"     .%#,       (###%#######%%%/     /###,                 \n" +
"      /###    *##/(###(###**%%(###(###(                    \n" +
"       (### #%#/  %%######/%%%%(%##(*                      \n" +
"  ..,,. ,#%%(    %%%#####/*((  ,######                     \n" +
"     ,/(/%#.    (%%##########(%&(#(,#/                     \n" +
"       %%#(   %%(%(/((((/((####(%*#(,.,    (* *  .         \n" +
"     ,#%#/  *%%%##/(####(/(%%%###,/##/,/,((.(( /( // /  ,  \n" +
"            %%##(%%#######%%%%%%##*//(*(((/(*/((/(*((*((   \n" +
"            #####(#######(%&%%%%%##/*(/((((*((((//((/(,    \n" +
"             ,(((((../((((/%%%%%###*////(*/////*(/((,      \n" +
"               (((       ,*//######(/////////////////,     \n" +
"              *(((            */##((*****///////(((,       \n" +
"          .(%%#             /////,(((,((((/((((((((((*     \n" +
"      *(#(#(/#            ((*//,//*(((*((((,((((( /(*((    \n" +
"           /             * ,/ ,/ ( (((/*((((/ ## (* .#     \n" +
"                                  ,#%%#/  ( .(             \n" +
"                                  %#%/#%.                  ";
        iPk[17] = "               (((#*                                       \n" +
"                 #(                                    \n" +
"                  ,&&%%(#                                  \n" +
"                   /&%#%/#      /                          \n" +
"                   ,%%#%(*      #                          \n" +
"                   (%%(%(.     *%                          \n" +
"                   //#%##(     /#(                         \n" +
"                       (#(/#*  /%/                    ,,   \n" +
"                        ((//#%%#/ ..         ./(&@@@     \n" +
"                         *(#(%%#%###       //&@@@@@&       \n" +
"                         /(%&%%%%#(.   ,((@@@@@@@%         \n" +
"                         ((/%%%((##*.(%&@@@(#%&@         \n" +
"                         //#*%##/,*(&&&&&&@@@&           \n" +
"                         ,%%&%&%%#/#&&&&@@@@@/             \n" +
"                  ,      ,(#(%%#*/#@@@@@@@/                \n" +
"                 ,%        *#/#/&%%%%,                     \n" +
"                 #%%(##*%#/%#*((* #&&&(#                   \n" +
"                 %%%%%%(%%####((  /&(%&&##.              \n" +
"                 (%%%%%(%@#((#(*//#&&&&&&&%@@@&%##&@       \n" +
"                  ####/#%%%%%%/////     (@@@@@@@@@@#&      \n" +
"                ,&,   ((#####(/////       @@@@#@@@@(%      \n" +
"             /##    .####(@      ((/     @@@@(@@@((      \n" +
"            %%%%#                  ////.   (@@@&@&.      \n" +
"          #%%%%%#                   /////   @@@&&&%%       \n" +
"        ,%%%%%%#(                   ((///// @@@(&%%        \n" +
"       /%%%%%%##/                   ##((///*&@@&(/         \n" +
"      /#%%%%####                     ##/(/*/@@           \n" +
"    %(#(%###/##(                       %*/*/&(             \n" +
"      @%/##%(*                             @               ";
        iPk[18] = "                   ///*             //**,                  \n" +
"                  *//////////////////**,.                  \n" +
"                  /((%@@@(//(&&&&%****,,.                  \n" +
"                 ./&@@@@@@@@@@&&&&&(*,,,.                  \n" +
"                 /@@@@@@@@@@@@@&&&&&(,,,..                 \n" +
"                 &&&@@@&@@@@@@@&&&&%%,,,..                 \n" +
"                 &&&@@@@@@@@@&&&&&%%%/....                 \n" +
"                 &&&&&&&&&&&&&&&%%%%#*....                 \n" +
"                 *&&&&&&&&&%%%%%%%###.....                 \n" +
"             .////*%%%%%%%%%%#######.,,,,,***.             \n" +
"          ./////(@@@@@@&&&&&&&&@@@@@@%**********.          \n" +
"        //////%@@@@@@@@@@@@@@@@@@@@@@@@/***********.       \n" +
"     .(//////@@@@@@@@@@@@@@@@@@@&&&&&&&&*,,**//******,     \n" +
"   .(///////@@@@@@@@@@@@@@@@@@@@@&&&&&&&%,,,**/////****,   \n" +
" ,////***/(@@@@@@@@@@@@@@@@@@@@@@&&&&&&&,,,,**********,. \n" +
",//****,,/@@@@@@@@@@@@@@@@@@@@@@&&&&&&&&&%,,,,,,,*******,,.\n" +
"/**,,,,./#@&&&@@@@@@@@@@@@@@@@@&&&&&&&&%%%,,,,,,..,,,***,,.\n" +
"@*@*..,//&&&&&@@@@@@@@@@@@@@@@&&&&&&&&%%%%,,,,,,.....///(//\n" +
"       //&&&&&&&@@@@@@@@@@@@&&&&&&&&&%%%%%,,,,,,,....   #, \n" +
"       //%&&&&&&&&@@@@@@@&&&&&&&&&&%%%%%%(,,,,,,.....      \n" +
"       //*&&&&&&&&&&&&&&&&&&&&&&&%%%%%%%/,,.,,,,.....      \n" +
"       ****%&&&&&&&&&&&&&&&&%%%%%%%%%%#,,,,,,,,......      \n" +
"       *****/&&&&&%%%%%%%%%%%%%%%%%%(,,....,.........      \n" +
"        ,,,,,,,,#%%%%%%%%%%%%%###*..................       \n" +
"         .,,,,,....................................        \n" +
"          /(*.............................,*((((/          \n" +
"        &&&@@@&&%%##(/*,,           %&&&@@@&&&%%##/        \n" +
"      @@&@&%%@%(###(((//            %%&&%%%@&(#&@%/     ";
        iPk[19] = "                ,*.                                        \n" +
"            .*****,                                        \n" +
"          /*******,.                                       \n" +
"        /(*******,,,    .//                                \n" +
"       ((/*/****,,,,,,/(/(.                                \n" +
"     /(((((****,./////*#/,                                 \n" +
"     /((((**,#&&////(##,,                                  \n" +
"     (((((/#&&////###,,,*                                  \n" +
"     (/(( *%///((##,,,,**,                                 \n" +
"     ##.   #%%%/%&&&*******                                \n" +
"     *.  *//((/&&&&&&*******,                              \n" +
"            &&%&&&&&&&,***.,,,,                 ,,,,       \n" +
"           &&&&&&*&&&&%**,,,///*,         . .,,,,,,        \n" +
"          *&%&&&/***&&&**,/////////     ,,,*...,*, .,,     \n" +
"          &/(&&%/****,&****//////(((*..,.***,**,,,,,,      \n" +
"          **/&&*****,*****,//(/((//(//,,,,*,,,,,,,.        \n" +
"          *,*******,,,****,///(((((////,,,,/,***,.,,,      \n" +
"           ,,****,&&%&&,,,,////(((/////*,*//.,,,,,.        \n" +
"            %,**,*&&&&&//*////////(/////,***,*,,           \n" +
"             *#,,#&&&//***/////////******.               \n" +
"               *#%%##(*********************                \n" +
"                  .(#************,,*****,                  \n" +
"                  **************,,,                        \n" +
"                    **, ,   * *(*                          \n" +
"                    ##,       *#(                          \n" +
"              ,   /%%.        (%%                          \n" +
"          ,(%%(((%%%%#((.    %%##%/                        \n" +
"         ,,.**#,            %%##%%/%%%                     \n" +
"           .               ,*.  (*. ./*,                 ";
    }
    
    //Metodo para asignar los Pokemon inciales que tendra el jugador
    public void pkIniciales(){
        String n0, n1, n2, n3, n4, n5, pss0, pss1, pss2, pss3, pss4, pss5, psa0, psa1, psa2, psa3, psa4, psa5;
        int ps0, ps1, ps2, ps3, ps4, ps5, pa0, pa1, pa2, pa3, pa4, pa5;
        
        n0="Bulbasaur";
        n1="Squirtle";
        n2="Charmander";
        n3="Pikachu";
        n4="Eevee";
        n5="Exodia";        
        
        ps0=(int)(rdm.nextDouble()*50+50);
        pss0 = String.valueOf(ps0);
        pa0=(int)(rdm.nextDouble()*15+5);
        psa0 = String.valueOf(pa0);
        
        ps1=(int)(rdm.nextDouble()*50+50);
        pss1 = String.valueOf(ps1);
        pa1=(int)(rdm.nextDouble()*15+5);
        psa1 = String.valueOf(pa1);
        
        ps2=(int)(rdm.nextDouble()*50+50);
        pss2 = String.valueOf(ps2);
        pa2=(int)(rdm.nextDouble()*15+5);
        psa2 = String.valueOf(pa2);
        
        ps3=(int)(rdm.nextDouble()*50+50);
        pss3 = String.valueOf(ps3);
        pa3=(int)(rdm.nextDouble()*15+5);
        psa3 = String.valueOf(pa3);
        
        ps4=(int)(rdm.nextDouble()*50+50);
        pss4 = String.valueOf(ps4);
        pa4=(int)(rdm.nextDouble()*15+5);
        psa4 = String.valueOf(pa4);
        
        ps5=(int)(rdm.nextDouble()*50+50);
        pss5 = String.valueOf(ps5);
        pa5=(int)(rdm.nextDouble()*15+5);
        psa5 = String.valueOf(pa5);
        
        mPk[0][0] = n0;
        mPk[0][1] = pss0;
        mPk[0][2] = psa0;
        mPk[0][3] = iPk[0];
        
        mPk[1][0] = n1;
        mPk[1][1] = pss1;
        mPk[1][2] = psa1;
        mPk[1][3] = iPk[1];
        
        mPk[2][0] = n2;
        mPk[2][1] = pss2;
        mPk[2][2] = psa2;
        mPk[2][3] = iPk[2];
        
        mPk[3][0] = n3;
        mPk[3][1] = pss3;
        mPk[3][2] = psa3;
        mPk[3][3] = iPk[3];
        
        mPk[4][0] = n4;
        mPk[4][1] = pss4;
        mPk[4][2] = psa4;
        mPk[4][3] = iPk[8];
        
        mPk[5][0] = n5;
        mPk[5][1] = pss5;
        mPk[5][2] = psa5;
        mPk[5][3] = iPk[6];
    }
    
    // Encabezado de la Aplicacion
    public void encabezado(){        
        System.out.println();
        

        System.out.println("                                                                                      .**                                                                      \n" +
"                                                                                    ,,****,                                                                    \n" +
"                                                                                  ,,***((***                                                                   \n" +
"                                                                                ,,***#%%##***                                                                  \n" +
"                                                                               ****/%%%%%(****                                                                 \n" +
"                                                         ,****,.,**,         *****%%%(****/                ,**********                                         \n" +
"              ,***************,                    ,**********.,******     *,.*********         ,,********************.                                        \n" +
"         ,********//(((((((/******.           .,******/(###/**,**(#(****   ,..,*************   ,,***(((((((***(%%%##***         ..********.                    \n" +
"     ,******(##%%%%%%%%%%%%%###(****,        ,,,**(%%%%%%%#/****%%%##(****.,*****/(####((/****,,,***%%%%%%#(**%%%%%#/**         ,,***(//*********  .           \n" +
"  *****/#%%%%%%%%%%%%%%%%%%%%%%%##/***       ,,,*****%%%%%#(**(%%%%%%##(*****/%%%%%%%%%%%###/***,**(%%%%%%#(*/%%%%%#(**         ,,**/%%%######(**,.********,   \n" +
"..,***%%%%%%%%%%%%%%%%%%%%%%%%%%%##/***      ,*******%%%%%#(*%%%%%%%%%%(***(%%%%%(***/%%%%%%(******%%%%%%%%#/(%%%%%##***        ,,****/%%%%%%##*****/#((//*****\n" +
"..,,***%%%%%%%%%%%%%%%%%%#(#%%%%%%##***      *,,..,**#%%%%##%%%%%%%%%#****#%%%%/**///**%%%%****.***%%%%%%%%#(%%%%%%%#/**  .********,,*(%%%%%%%#/****%%%%%%#(***\n" +
" ,,,,***%%%%%%%%%%%%%%#*******#%%%%#***   .,*****,.**/%%%%%%%%%%%%%%******%%%%(** .**%%%%*****.,**(%%%%%%%%#%%%%%%%%#(******/(((((/***(%%%%%%%#(***/%%%%%%#/** \n" +
"  *,,,***#%(*%%%%%%%%%%(** //**%%%%(*******/(((((****/%%%%%%%%%%%%***( **/%%%%(****#%%%/***(******%%%%%%%%%%%%%%%%%%#(***(%%(*(%%%##(/**%%%%%%%#/**#%%%%%%(**( \n" +
"    ,,,*******%%%%%%%%%#/** /**%%%#*****#%%%#(#%%##(***%%%%%%%%%******,***%%%%%(*(%%%/**(%%##(****#%%%%%%%%%%%%%%%%%/**%%%/**%%%%%#%##(**%%%%%%#(*/%%%%%%(***  \n" +
"     *****,,***%%%%%%%%%#*****%%%%****%%%#**%%%%%%%##(**%%%%%%%%###(/*****/%%%%%%%%%#%%%%%%%%##(***(%%%%(%%%%%%%%%#/**%%%#***/%%%#*#%##**(%%%%%##*#%%%%%#/**   \n" +
"      *,/,,,,***%%%%%%%%#(**%%%%(***/%%%#***/%%%%//%%#/*/%%%%%%%%%%%%###(***%%%%%%%%%%%%%%%%%(***/%%%%%#**%%%%#/%%(**%%%%#/*******/%%%#**(%%#%%%#(%%%%%%(**(   \n" +
"          ,,,,***%%%%%%%%%%%%%#*****%%%%#(********%%%#/**%%%#*(%%%%%%%%%#(****/%%%%%%%%%%(*******%%%%%%(***%%%/*%#(**%%%%%##(/**/%%%%%(**%%#(%%%#%%%%%%(***    \n" +
"           ,,,,**/%%%%%%%%%%*******(%%%%%#(/****(%%%%#**/%%%#*****(%%%%%%###(***************..**(%%%%%#(***/%(**%#(**%%%%%%%%%%%%%%%%(**(%%((%%%%%%%%%#/**     \n" +
"            ,,,***(%%%%%%%#(***,,**(%%%%%%%%#%%%%%%%%/**%%%%#**,******(%%%%%%###((/**,..., ..***%%%%%%#*****/***(%#/**%%%%%%%%%%%%%%/**#%%#//%%%%%%%%%(**(     \n" +
"             ,,.***#%%%%%%##***,,***%%%%%%%%%%%%%%%%/**%%%%%#**,,,,,******(%%%%%%#/**     ...************,*******%##/**/%%%%%%%%%%/**/%%%%#*/%%%%%%%%(***      \n" +
"              ...***#%%%%%%#(***..***#%%%%%%%%%%%%(****%%%%%#**/   ,,,,,,*****(%%#/**     ,,,,,,,,,,,,***,,**,***%%%##/*************/%%%%%(*/%%%%%%%#/**       \n" +
"               ...***%%%%%%%#***...,***/%%%%%%%/****,**%%%%%#**/       ,,,,,,********                    ,,,,,,**/(#%%##(****,,...**(%%%%#/*/%%%%%%%(**(       \n" +
"               ,...***%%%%%%#(*** ....***********....**********/           ,,,,,,****                       ,,,*************   ...******//**/%%%%%%(***        \n" +
"                ....***%%%%%%#***   ...........   ...**,,....,                 ,,,,,,                         ,,,,,,,,,,,,**   ..,,,,,*******%%%%%#/**         \n" +
"                 ....***%%%%%#(***                                                                                       *            *,,,***%%%%%(**(         \n" +
"                  ...,***%(*******                                                                                                      ,,,******/***          \n" +
"                   ...,******,..                                                                                                        *,,,,,,,****           \n" +
"                    ...,..,                                                                                                                    ,,,            ");
        System.out.println("");
        menuPrincipal();
    }
    
    //Menu Principal
    public void menuPrincipal(){

        
        System.out.println("----------Menu Principal----------");
        System.out.println("Desea Ingresar al Sistema o Salir?");
        System.out.println("1 Ingresar al Sistema | 2 Salir");
        opt=leer.next();
        
        //Verificacion de lo que ingresa el usuario
        switch(opt){
            case "1":
                System.out.println("");
                submenu();
                break;
            case "2":
                System.exit(0);
                break;
            default:
                System.out.println("Ingrese una opcion correcta");
                System.out.println("");
                menuPrincipal();
        }
        
    }
    
    //Submenu para entrar como Admin o Jugar
    public void submenu(){
                
        /* Buscar y hacer funcion para limpiar la consola. Sino recurrir a un ciclo
        System.out.print("\033[H\033[2J");  
        System.out.flush();
        */
        
        System.out.println("Ingresar como Administrador, Jugar o Regresar al menu principal?");
        System.out.println("1 Admin | 2 Jugar | 3 Regresar");
        opt = leer.next();
        System.out.println("");
        //Verificacion de lo que ingresa el usuario
        switch(opt){
            case "1":
                menuAdmin();
                break;
            case "2":
                menuJugar();
                break;
            case "3":
                menuPrincipal();
                break;
            default:
                System.out.println("Ingrese una opcion correcta");
                System.out.println("");
                submenu();
                break;
        }
        
    }
    
    /*
        ---------------------------------Admin---------------------------------
    */
    
    //Menu de administrador
    public void menuAdmin(){        
        //Variable para este menu
        String pass;
        System.out.println("Ingrese la contraseña de Administrador");
        pass=leer.next();
        if(pass.equals("201807394")){
            System.out.println("");
            System.out.println("--------------------------------------- Menu de Administrador ---------------------------------------");
            System.out.println("Que desea hacer?");
            System.out.println("1 Lista de Pokemon | 2 Agregar Pokemon | 3 Editar Pokemon | 4 Reportes | 5 Regresar al menu Principal");
            opt=leer.next();
            System.out.println("");
            
            switch(opt){
                case "1":
                    mostrarLista();
                    menuAdmin();
                    break;
                case "2":
                    agregarPk();
                    break;
                case "3":
                    editarPk();                    
                    break;
                case "4":
                    menuReportes();
                    break;
                case "5":
                    menuPrincipal();
                    break;
                default:
                    System.out.println("Ingrese una opcion correcta");
                    System.out.println("");
                    menuAdmin();
            }
        }else{
            System.out.println("");
            System.out.println("Contraseña Incorrecta. Intente de nuevo");
            menuAdmin();
        }
    }
    
    //Metodo para mostrar la Lista de Pokemon
    public void mostrarLista(){
        int cont = 0;
        for (String[] mPk1 : mPk) {
            if (mPk1[0] == null) {
                break;
            } else {
                System.out.println("[ " + cont + " ]");
                System.out.println(mPk1[3]);
                for (int j = 0; j<3; j++) {
                    switch(j){
                        case 0:
                            System.out.println("Nombre: " + mPk1[j]);
                            break;
                        case 1:
                            System.out.println("Puntos de Salud: " + mPk1[j]);
                            break;
                        case 2:
                            System.out.println("Puntos de Ataque: " + mPk1[j]);
                            break;
                    }
                }
            }
            cont +=1;
            System.out.println("");
        }                
    }
    
    public void agregarPk(){
        String img, nmb, ps, pa;
        int psi, pai, imgi;
        if(c!=20){
            System.out.println("--------------------------------------------------------------Agregar Pokemon--------------------------------------------------------------");
            System.out.println("Instrucciones: Para agregar un Pokemon se le mostraran las imagenes disponibles, de las cuales seleccionara una para asignarle a su Pokemon.\n"
                    +          "Para seleccionarla escriba el numero asociado a la imagen que se encuentra entre '[]'. Luego se le solicitara el nombre de su Pokemon");
            System.out.println("Escriba cualquier tecla y Enter para continuar");
            opt = leer.next();
            mostrarImg();
            System.out.println("Ingrese el numero asociado a la imagen que quiere");
            img = leer.next();
            //Verifica que los valores ingresados sean correctos
            if(img.equals("0") || img.equals("1") || img.equals("2") || img.equals("3") || img.equals("4") || img.equals("5") || img.equals("6") || img.equals("7") || img.equals("8") || img.equals("9") || img.equals("10") || img.equals("11") || img.equals("12") || img.equals("13") || img.equals("14") || img.equals("15") || img.equals("16") || img.equals("17") || img.equals("18") || img.equals("19")){
                System.out.println("");
                System.out.println("Ingrese el nombre que le quiere dar al Pokemon");
                nmb = leer.next();
                psi = (int)(rdm.nextDouble()*50+50);
                ps = String.valueOf(psi);
                pai = (int)(rdm.nextDouble()*15+5);
                pa = String.valueOf(pai);
                imgi = Integer.parseInt(img);
                crearPk(nmb, ps, pa, imgi);
                System.out.println("Pokemon creado exitosamente");
                System.out.println("");
                menuAdmin();
            }else{
                System.out.println("Ingrese un valor valido");
                System.out.println("Se regresara al menu de Administrador");
                System.out.println("");
                menuAdmin();
            }
        }else{
            System.out.println("Numero maximo de Pokemon alcanzado");
            System.out.println("");
            menuAdmin();
        }
    }
    
    //Metodo para mostrar imagenes
    public void mostrarImg(){
        //Ciclo para mostrar imagenes de pokemon
            for(int i = 0; i<20;i++){
                System.out.println("[ " + i + " ]");
                System.out.println(iPk[i]);
            }
    }
    
    //Metodo para crear un Pokemon
    public void crearPk(String name, String ps, String pa, int img){
        mPk[c][0] = name;
        mPk[c][1] = ps;
        mPk[c][2] = pa;
        mPk[c][3] = iPk[img];
        c +=1;        
    }
    
    //Metodo que edita un Pokemon
    public void editarPk(){
        String pkE, nImg, nName, psns, pans;
        int pkEi, nImgi, psn, pan;
        System.out.println("--------------------------------------------------------------Editar Pokemon--------------------------------------------------------------");
        System.out.println("Instrucciones: Para editar un Pokemon se le mostraran los pokemon disponibles para editar, unicamente mostrando su nombre e imagen. \n"
                + "         Debe colocar el numero asociado al Pokemon para editar a ese Pokemon. Luego se mostraran las imagenes disponibles para su Pokemon\n"
                + "         y debe seleccionar el numero asociado a la imagen. Por ultimo se le pedira el nuevo nombre del Pokemon que edito.");
        System.out.println("         Escriba cualquier tecla y Enter para continuar");
        opt = leer.next();
        mostrarLista();
        System.out.println("Ingrese el numero del Pokemon a editar");
        pkE = leer.next();
        pkEi = Integer.parseInt(pkE);
        if(pkEi>=c){
            System.out.println("Ingrese un dato correcto");
            System.out.println("Se regresara al menu de Administrador");
            System.out.println("");
            menuAdmin();
        }        
        System.out.println("");
        mostrarImg();
        System.out.println("Ingrese el numero de la imagen para el Pokemon");
        nImg = leer.next();
        nImgi = Integer.parseInt(nImg);
        if(nImgi>19){
            System.out.println("Ingrese un dato correcto");
            System.out.println("Se regresara al menu de Administrador");
            System.out.println("");
            menuAdmin();
        }
        System.out.println("");
        System.out.println("Ingrese el nuevo nombre de su Pokemon");
        nName = leer.next();
        
        psn = (int)(rdm.nextDouble()*50+50);
        psns = String.valueOf(psn);
        pan = (int)(rdm.nextDouble()*15+5);
        pans = String.valueOf(pan);
        
        llenarPk(nName, nImgi, pkEi, psns, pans);
        System.out.println("Pokemon editado con exito");
        System.out.println("");
        menuAdmin();
        
    }
    
    //Metodo que llena los datos a editar de un Pokemon
    public void llenarPk(String name, int img, int pos, String ps, String pa){
        mPk[pos][0] = name;
        mPk[pos][1] = ps;
        mPk[pos][2] = pa;
        mPk[pos][3] = iPk[img];
    }
    
    //Menu para todo lo de Reportes
    public void menuReportes(){
        System.out.println("--------------------------------------- Menu de Reportes ---------------------------------------");
        System.out.println("Que desea ver?");
        System.out.println("1 Registro de Partidas |  Regresar al menu Pricipal");
        opt = leer.next();
        switch(opt){
            case "1":
                registro();
                break;
            default:
                menuPrincipal();
                break;
        }
    } 
    
    //Imprime todos los registros de partidas que existen
    public void registro(){
        System.out.println("---------------------------Registro de Partidas---------------------------");
        for(String[] mReg1 : mReg){
            if (mReg1[0] == null) {
                break;
            } else {
                System.out.println("------------------------------------------------------------------");
                System.out.println("Partida No. " + mReg1[0]);
                System.out.println("");
                System.out.println("Datos del Jugador 1:");                
                System.out.println("Nombre Jugador 1: " + mReg1[1]);
                System.out.println("Pokemon 1 del Jugador 1: " + mReg1[2]);
                System.out.println("Pokemon 2 del Jugador 1: " + mReg1[3]);
                System.out.println("Ataques realizados por Pokemon 1 del Jugador 1: " + mReg1[4]);
                System.out.println("Ataques recibidos por Pokemon 1 del Jugador 1: " + mReg1[5]);
                System.out.println("Ataques realizados por Pokemon 2 del Jugador 1: " + mReg1[6]);
                System.out.println("Ataques recibidos por Pokemon 2 del Jugador 1: " + mReg1[7]);
                System.out.println("");
                System.out.println("Datos del Jugador 2:");
                System.out.println("Nombre del Jugador 2: " + mReg1[8]);
                System.out.println("Pokemon 1 del Jugador 2: " + mReg1[9]);
                System.out.println("Pokemon 2 del Jugador 2: " + mReg1[10]);
                System.out.println("Ataques realizados por Pokemon 1 del Jugador 2: " + mReg1[11]);
                System.out.println("Ataques recibidos por Pokemon 1 del Jugador 2: " + mReg1[12]);
                System.out.println("Ataques realizados por Pokemon 2 del Jugador 2: " + mReg1[13]);
                System.out.println("Ataques recibidos por Pokemon 2 del Jugador 2:" + mReg1[14]);
                System.out.println("");
                System.out.println("Ganador de la Partida: " + mReg1[15]);
                
            }
        }
        System.out.println("");
        System.out.println("Desea regresar al menu de Reportes, Admin o Principal?");
        System.out.println("1 Reportes | 2 Admin | Principal ");
        opt = leer.next();
        
        switch(opt){
            case "1":
                System.out.println("");
                menuReportes();
                break;
            case "2":
                System.out.println("");
                menuAdmin();
                break;
            default:
                System.out.println("");
                menuPrincipal();
                break;
        }
    }

    /*
        -----------------------------Finaliza Admin-----------------------------
    */    
    
    
    /*
        ---------------------------------Jugar---------------------------------
    */
    // Para Jugar solicitar los datos iniciales y asignarlos a variables. Luego crear otra clase para hacer las batallas un poco mas ordenadas
    public void menuJugar(){
        //Instancia para el objeto jugar
        
        System.out.println("--------------Menu para Jugar--------------");
        System.out.println("Desea Batallar o Regresar al Menu Principal");
        System.out.println("1 Batallar | 2 Regresar");
        
        opt=leer.next();
        
        switch(opt){
            case "1":
                System.out.println("");
                encabezadoBatalla();
                solicitarDatosBatalla();
                break;
            case "2":
                System.out.println("");
                menuPrincipal();
                break;
            default :
                System.out.println("Ingrese una opcion correcta");
                System.out.println("");
                menuJugar();
                break;
        }
        
    }
    
    //Encabezado de la Batalla
    public void encabezadoBatalla(){
        System.out.println("                                                                                                                                                               \n" +
"           .,,***********************************************************************************************************************************,,.           \n" +
"       (%@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@&*.      \n" +
"     %@@@@@%/*************************************************************************************************************************************/#@@@@@&.    \n" +
"    &@@@@*                                                                                                                                           ,&@@@@,   \n" +
"   %@@@,  *@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@*          ,#%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%#*  /&@@@.  \n" +
"  *@@@*  #@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@%/              /##%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%#(  ,@@@(  \n" +
"  /@@@,  &@@@@@@@@@@@@@@@@@@@&/.        ./&@@@,                  /%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%#. .&@@%  \n" +
"  /@@@,  &@@@@@@@@@@@@@@@@@@/               ,,                    /%#%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%#. .&@@%  \n" +
"  /@@@,  &@@@@@@@@@@@@@@@@,              ..,.                      *#%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%#. .&@@%  \n" +
"  /@@@,  &@@@@@@@@@@@@@@%           *(#%%%%%(        ,(%%%%#(,      ,#%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%#. .&@@%  \n" +
"  /@@@,  &@@@@@@@@@@@&%*          *#%%%%%%%%%#(***/#%%%%%%%%%%%##/.  .#%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%#. .&@@%  \n" +
"  /@@@,  &@@@@@@@&*              *#%%%%%%%%%%%%%%%%%#%%%%%%%%%%%###(.  /#%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%#. .&@@%  \n" +
"  /@@@,  &@@@@@&(              .*%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%#,  ,##%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%#((//**,*(#%%%%%%%%%%%%%%%%%%%%%%%%#. .&@@%  \n" +
"  /@@@,  &@@@@@(.             *#%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%#%#(  (%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%#/.               ./#%%%%%%%%%%%%%%%%%%%%%#. .&@@%  \n" +
"  /@@@,  &@@@@@,        .####%%%%%%%%%%%%%%%#%%%%%%%%%%%%%%%%%%%%%%%%%%###* *#%%%%%%%%%%%%%%%%%%%%%%%%%%%%(.                     *#%#%%%%%%%%%%%%%%%%#. .&@@%  \n" +
"  /@@@,  &@@@@@.        ,%##%%%%%#(*,. ..,*(#%%%%%%%%%%%%%%%%%#####%%%#(((#* ,#%%%%%%%%%%%%%%%%%%%%%%%%%%#,                        /##%%%%%%%%%%%%%%%#. .&@@%  \n" +
"  /@@@,  &@@@@&        ,(%%%%%#*../&@@@@@@&(..(#((/,..   ..,,,,,,,,,.         .#%#%#%%%%%%%%%%%%%%%%%%%%%/                           (%%%%%%%%%%%%%%%#. .&@@%  \n" +
"  /@@@,  &@@@@@.      .#%%%%#* (&@%,      ,%@&*/(%&@@@@@@@@@@@@@@@@@,            .*#%%%%%%%%%%%%%%%%%%%%#,                            *#%%%%%%%%%%%%%#. .&@@%  \n" +
"  /@@@,  &@@@@@@#.  .*#%%%%#,.&@%        .(..&@@@@@@@@@@@@@@@@@@@@&%.               /%%%%%%%%#(/*,,..                                  *#%%%%%%%%%%%%#. .&@@%  \n" +
"  /@@@,  &@@@@@@@,.##%%%%%%( #@(.         ,&.,@@@@@&%(*,,.                          ,%%%%%%%%(*.                                       ,(%%%%%%%%%%%%#. .&@@%  \n" +
"  /@@@,  &@@@@@@% /%%%%%%%%*.&@,          ,@/ %@%                                   ,#%%%%%%%%%###%#(*                                 (%%%%%%%%%%%%%#. .&@@%  \n" +
"  /@@@,  &@@@@@&(.#%%%%%%#* *@@, (.      ,@@.,@@#                                   *%%%%%%%%%%%%%%#*                                 /%%%%%%%%%%%%%%#. .&@@%  \n" +
"  /@@@,  &@@@@@&*.#%#%#/..#@@@@@# ((#&@@%.,@@(.                                   (%%%%%%%%%%%%%%%%%/.                             *#%%%%%%%%%%%%%%#. .&@@%  \n" +
"  /@@@,  &@@@@@%*.#%##,.*@@@@@@@@%,./#%(/. (@@#                                    ,#%%%%%%%%%%%%%%%%%%,                            .#%%%%%%%%%%%%%%%#. .&@@%  \n" +
"  /@@@,  &@@@@#  .##* #@@@@@*  .*&@@@&&&@@@@#.                                     ,#%%%%%%%%%%%%%%%%%##*                            .#%%%%%%%%%%%%%%#. .&@@%  \n" +
"  /@@@,  &@@@#    (,.&@@@%.        .,/(/*,                                           ,####((##%%%%%%%%%(,                            (%%%%%%%%%%%%%%%#. .&@@%  \n" +
"  /@@@,  &@@@,     .&@@(.                                                                     ,(#####%%#(.                        **.(%%%%%%%%%%%%%%%#. .&@@%  \n" +
"  /@@@,  &@@@,     (@@/                                                                              ./#%#*                     ,*(%##%%%%%%%%%%%%%%%#. .&@@%  \n" +
"  /@@@,  &@@@&     *@,                                                                                                        .(%%#%%%%%%%%%%%%%%%%%%#. .&@@%  \n" +
"  /@@@,  &@@@@%     .                                                                                                  ,/##**.*%%%%%%%%%%%%%%%%%%%%%%#. .&@@%  \n" +
"  /@@@,  &@@@@@@#                                                                                                         (#%#%%%%%%%%%%%%%%%%%%%%%%%#. .&@@%  \n" +
"  /@@@,  &@@@@@@@@&%&@(                                                                                                  /#%%%%%%%%%%%%%%%%%%%%%%%%%%#. .&@@%  \n" +
"  /@@@,  &@@@@@@@@@@@@@&(                                                                                              .*##%%%%%%%%%%%%%%%%%%%%%%%%%%#. .&@@%  \n" +
"  /@@@,  &@@@@@@@@@@@@@@@@/                                                                                               .(%%%%%%%%%%%%%%%%%%%%%%%%%#. .&@@%  \n" +
"  /@@@,  &@@@@@@@@@@@@@@@@@@(                                       .##**.                                                  ,##%%%%%%%%%%%%%%%%%%%%%%#. .&@@%  \n" +
"  /@@@,  &@@@@@@@@@@@@@@@@@@@@(.                                  ,%@@@@@@@@%#/.                                             *%%%%%%%%%%%%%%%%%%%%%%%#. .&@@%  \n" +
"  /@@@,  &@@@@@@@@@@@@@@@@@@@@@@@&/.                          ,#&@@@@@@@@@@@@@@@@/                                            /%%%%%%%%%%####%%%%%%%%#. .&@@%  \n" +
"  /@@@,  &@@@@@@@@@@@@@@@@@@@@@@@@@@@@%(*.             ..*#&@@@@@@@@@@@@@@@@@@@@@@@#.                                          /#%%%%%%#/,.   ./#%#%%#. .&@@%  \n" +
"  /@@@,  &@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@&.                                        ,#%%%%%(.        .#%%#. .&@@%  \n" +
"  /@@@,  &@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@#                                          /%%%%%*.        .#%%#. .&@@%  \n" +
"  /@@@,  &@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@,                                           (%%%%#(.      .(%%%#. .&@@%  \n" +
"  /@@@,  &@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@#                                            /%%%%#(.     /#%%%##. .&@@%  \n" +
"  /@@@,  &@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@,                                             /#*.      ,#%%%%%%#. .&@@%  \n" +
"  /@@@,  &@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@%                                                       ,#%%%%%%%#. .&@@%  \n" +
"  /@@@,  &@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@/                                                      /%%%%%%%%%#. .&@@%  \n" +
"  /@@@,  &@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@.                                                    *#%%%%%%%%%%#. .&@@%  \n" +
"  /@@@,  &@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@%                                      //          .(#%%%%%%%%%%%%#. .&@@%  \n" +
"  /@@@,  &@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@(                                     ,##(.      ./##%%%%%%%%%%%%%#. .&@@%  \n" +
"  /@@@,  &@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@,                                     (%%##(,,,/#%%%%%%%%%%%%%%%%%#. .&@@%  \n" +
"  /@@@,  &@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@&.                                    .#%%%#%%%#%%%%%%%%%%%%%%%%%%%#. .&@@%  \n" +
"  /@@@,  &@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@%                                     *%%%%%%%%%%%%%%%%%%%%%%%%%%%%#. .&@@%  \n" +
"  /@@@,  &@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@%                                    .*%%%%%%%%%%%%%%%%%%%%%%%%%%%%#. .&@@%  \n" +
"  /@@@,  &@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@#                                     .#%%%%%%%%%%%%%%%%%%%%%%%%%%%#. .&@@%  \n" +
"  *@@@*  #@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@#                                      *%%%%%%%%%%%%%%%%%%%%%%%%%%%(  .@@@(  \n" +
"   %@@@.  /@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@/                                      .#%%%%%%%%%%%%%%%%%%%%%%#%#/  *%@@@.  \n" +
"   ,@@@@#   .*********************************************************************                                        ,,,,,,,,,,,,,,,,,,,,,,,,.   /@@@@/   \n" +
"    .%@@@@@#*,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,*#&@@@@&,    \n" +
"      .(&@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@&/.      \n" +
"           .,**************************************************************************************************************************************.          ");
    }
    
    
    //Metodo para solicitar datos de batalla
    public void solicitarDatosBatalla(){
        //Variables de posicion de matriz
        int pkj11, pkj12, pkj21, pkj22;
        //Variables para mandar al metodo dentro de Batalla
        String s1, s2, s3, s4, s5, s6, s7, s8;
        int i1, i2, i3, i4, i5, i6, i7, i8;
                
        System.out.println("");
        System.out.println("Ingrese el nombre del jugador 1");
        j1 = leer.next();
        System.out.println("Ingrese el nombre del jugador 2");
        j2 = leer.next();
        System.out.println("Se le mostraran los nombres y su numero asignado de cada Pokemon. Seleccionen 2 para su batalla");
        mostrarPkB();
        System.out.println(j1 + " ingresa el numero de tu primer pokemon");
        pkj11 = Integer.parseInt(leer.next());
        System.out.println(j1 + " ingresa el numero de tu segundo pokemon");
        pkj12 = Integer.parseInt(leer.next());
        System.out.println(j2 + " ingresa el numero de tu primer pokemon");
        pkj21 = Integer.parseInt(leer.next());
        System.out.println(j2 + " ingresa el numero de tu segundo pokemon");
        pkj22 = Integer.parseInt(leer.next());
        if(pkj11 >= c || pkj12 >= c || pkj21 >= c || pkj22 >= c){
            System.out.println("Ingresen los datos correctos para seleccionar a sus Pokemon");
            System.out.println("Se volvera a solicitar sus datos para la batalla");
            solicitarDatosBatalla();
        }
        //J1
        s1 = mPk[pkj11][0];
        s2 = mPk[pkj12][0];
        i1 = Integer.parseInt(mPk[pkj11][2]);
        i2 = Integer.parseInt(mPk[pkj12][2]);
        i3 = Integer.parseInt(mPk[pkj11][1]);
        i4 = Integer.parseInt(mPk[pkj12][1]);
        s5 = mPk[pkj11][3];
        s6 = mPk[pkj12][3];
        
        //J2
        s3 = mPk[pkj21][0];
        s4 = mPk[pkj22][0];
        i5 = Integer.parseInt(mPk[pkj21][2]);
        i6 = Integer.parseInt(mPk[pkj22][2]);
        i7 = Integer.parseInt(mPk[pkj21][1]);
        i8 = Integer.parseInt(mPk[pkj22][1]);
        s7 = mPk[pkj21][3];
        s8 = mPk[pkj22][3];
        
        asignarValores(j1, s1, s2, i1, i2, i3, i4, j2, s3, s4, i5, i6, i7, i8, s5, s6, s7, s8);
    }
    
    //Metodo para mostrar los nombres de cada Pokemon que se puede usar en Batalla
    public void mostrarPkB(){
        for(int i=0;i<c;i++){
            System.out.print("[ " + i + " ] : ");
            System.out.print(mPk[i][0]);
            System.out.println("");
        }
    }
    
    /*
        --------------------------- Termina Jugar -------------------------------
    */
    
    /*
        ---------------------------- Inicia Batalla ------------------------------
    */
    
    //objetos y variables para batalla en general. Separados por jugadores para mejor entendimiento.
    int contador = 1; //Se suma 1 hasta que acabe la batalla
    String ja;
    int t;
    //J1:
    String nj1, pkj1_1, pkj1_2, ej1_1, ej1_2, img11, img12;
    int atj1_1, atj1_2, saj1_1, saj1_2, atsj1_1=0, atsj1_2=0, defj1_1=0, defj1_2=0;
    //nj1, pkj1_1, pkj1_2, atsj1_1, atsj1_2, defj1_1, defj1_2 deberan ser asignador a un String (Cambiar tipo si es necesario), y colocarlos dentro de mReg
    
    //J2:
    String nj2, pkj2_1, pkj2_2, ej2_1, ej2_2, img21, img22;
    int atj2_1, atj2_2, saj2_1, saj2_2, atsj2_1=0, atsj2_2=0, defj2_1=0, defj2_2=0;
    //nj2, pkj2_1, pkj2_2, atsj2_1, atsj2_2, defj2_1, defj2_2 deberan ser asignador a un String (Cambiar tipo si es necesario), y colocarlos dentro de mReg
    
    //G
    String ganador;
            
    int eg1 = 1, eg2 = 1;
    
    //Matriz de Registro
    String mReg[][] = new String[30][16];    

    //Asignacion de valores para la batalla
    public void asignarValores(String n1, String npk11, String npk12, int atpk11, int atpk12, 
            int sapk11, int sapk12, String n2, String npk21, String npk22, int atpk21, 
            int atpk22, int sapk21, int sapk22, String i1, String i2, String i3, String i4){
        //J1
        eg1 = 1;
        eg2 = 1;
        nj1 = n1;
        pkj1_1 = npk11;
        pkj1_2 = npk12;
        atj1_1 = atpk11;
        atj1_2 = atpk12;
        saj1_1 = sapk11;
        saj1_2 = sapk12;
        img11 = i1;
        img12 = i2;
        ej1_1 = "Vivo";
        ej1_2 = "Vivo";
        
        //J2
        nj2 = n2;
        pkj2_1 = npk21;
        pkj2_2 = npk22;
        atj2_1 = atpk21;
        atj2_2 = atpk22;
        saj2_1 = sapk21;
        saj2_2 = sapk22;
        img21 = i3;
        img22 = i4;
        ej2_1 = "Vivo";
        ej2_2 = "Vivo";
        
        turno();
    }
    
    //Generacion de turno aleatorio
    public void turno(){        
        t = (int)(rdm.nextDouble()*2+0);
        switch(t){
            case 0:
                j1empieza();
                break;
            case 1:
                j2empieza();
                break;                
        }
    }
    
    //Metodo si j1 Empieza
    public void j1empieza(){
        
        String pa, pd;
        do{            
            ja=nj1;

            imprimir();
            
            System.out.println(ja + " Selecciona el Pokemon que atacara");
            pa = leer.next();
            System.out.println(ja + " Selecciona al Pokemon que quieres atacar");
            pd = leer.next();
            j1ataca(pa, pd);
            
            if(eg2 == 0){
                break;
            }
            
            ja = nj2;
            
            imprimir();
            
            System.out.println(ja + " Selecciona el Pokemon que atacara");
            pa = leer.next();
            System.out.println(ja + " Selecciona al Pokemon que quieres atacar");
            pd = leer.next();
            j2ataca(pa, pd);
            
        } while(eg1 == 1 & eg2 == 1);
        finalizador();
    }
            
    //Metodo si j2 Empieza
    public void j2empieza(){
        
        String pa, pd;
        do{            
            ja=nj2;

            imprimir();
            
            System.out.println(ja + " Selecciona el Pokemon que atacara");
            pa = leer.next();
            System.out.println(ja + " Selecciona al Pokemon que quieres atacar");
            pd = leer.next();
            j2ataca(pa, pd);
            
            if(eg1==0){
                break;
            }
            ja = nj1;
            
            imprimir();
            
            System.out.println(ja + " Selecciona el Pokemon que atacara");
            pa = leer.next();
            System.out.println(ja + " Selecciona al Pokemon que quieres atacar");
            pd = leer.next();
            j1ataca(pa, pd);
            
        } while(eg1 == 1 & eg2 == 1);
        finalizador();
    }
            
    //Metodo para los ataques de J1
    public void j1ataca(String pka, String pkd){
        
        switch (pka) {
            case "1":
                if(saj1_1 <= 0){
                    System.out.println("El Pokemon que ataca ya se encuentra muerto");
                    if(t==0){
                        j1empieza();
                        break;
                    }else{
                        j2empieza();
                        break;
                    }
                }else{
            switch (pkd) {
                case "1":
                    if(saj2_1 <= 0){
                        System.out.println("El Pokemon que quiere atacar ya se encuentra muerto");
                        if(t==0){
                            j1empieza();
                            break;
                        }else{
                            j2empieza();
                            break;
                        }
                    }else{
                        saj2_1 = saj2_1 - atj1_1;
                        atsj1_1 ++;
                        defj2_1 ++;
                        validarVida();
                    }
                    break;
                case "2":
                    if(saj2_2 <= 0){
                        System.out.println("El Pokemon que quiere atacar ya se encuentra muerto");
                        if(t==0){
                            j1empieza();
                            break;
                        }else{
                            j2empieza();
                            break;
                        }
                    }else{
                        saj2_2 = saj2_2 - atj1_1;
                        atsj1_1 ++;
                        defj2_2 ++;
                        validarVida();
                    }
                    break;
                default:
                    System.out.println("Selecciona un valor correcto para el pokemon que quieres atacar");
                    if(t==0){
                        j1empieza();
                        break;
                    }else{
                        j2empieza();
                        break;
                    }
            }
                }   break;
            case "2":
                if(saj1_2 <= 0 ){
                    System.out.println("El Pokemon que ataca ya se encuentra muerto");
                    if(t==0){
                        j1empieza();
                        break;
                    }else{
                        j2empieza();
                        break;
                    }
                }else{
            switch (pkd) {
                case "1":
                    if(saj2_1 <= 0 ){
                        System.out.println("El Pokemon que quiere atacar ya se encuentra muerto");
                        if(t==0){
                            j1empieza();
                            break;
                        }else{
                            j2empieza();
                            break;
                        }
                    }else{
                        saj2_1 = saj2_1 - atj1_2;
                        atsj1_2 ++;
                        defj2_1 ++;
                        validarVida();
                    }
                    break;
                case "2":
                    if(saj2_2 <= 0){
                        System.out.println("El Pokemon que quiere atacar ya se encuentra muerto");
                        if(t==0){
                            j1empieza();
                            break;
                        }else{
                            j2empieza();
                            break;
                        }
                    }else{
                        saj2_2 = saj2_2 - atj1_2;
                        atsj1_2 ++;
                        defj2_2 ++;
                        validarVida();
                    }
                    break;
                default:
                    System.out.println("Selecciona un valor correcto para el pokemon que quieres atacar");
                    if(t==0){
                        j1empieza();
                        break;
                    }else{
                        j2empieza();
                        break;
                    }
            }
                }   break;
            default:
                System.out.println("Selecciona un valor correcto para el pokemon que atacara");
                if(t==0){
                    j1empieza();
                    break;
                }else{
                    j2empieza();
                    break;
                }
                
        }
    }
    
    //Metodo para los ataques de J2
    public void j2ataca(String pka, String pkd){
                
        switch (pka) {
            case "1":
                if(saj2_1 <= 0){
                    System.out.println("El Pokemon que ataca ya se encuentra muerto");
                    if(t==0){
                        j1empieza();
                        break;
                    }else{
                        j2empieza();
                        break;
                    }
                }else{
            switch (pkd) {
                case "1":
                    if(saj1_1 <= 0){
                        System.out.println("El Pokemon que quiere atacar ya se encuentra muerto");
                        if(t==0){
                            j1empieza();
                            break;
                        }else{
                            j2empieza();
                            break;
                        }
                    }else{
                        saj1_1 = saj1_1 - atj2_1;
                        atsj2_1 ++;
                        defj1_1 ++;
                        validarVida();
                    }
                    break;
                case "2":
                    if(saj1_2 <= 0){
                        System.out.println("El Pokemon que quiere atacar ya se encuentra muerto");
                        if(t==0){
                            j1empieza();
                            break;
                        }else{
                            j2empieza();
                            break;
                        }
                    }else{
                        saj1_2 = saj1_2 - atj2_1;
                        atsj2_1 ++;
                        defj1_2 ++;
                        validarVida();
                    }
                    break;
                default:
                    System.out.println("Selecciona un valor correcto para el pokemon que quieres atacar");
                    if(t==0){
                        j1empieza();
                        break;
                    }else{
                        j2empieza();
                        break;
                    }
            }
                }   break;
            case "2":
                if(saj2_2 <= 0 ){
                    System.out.println("El Pokemon que ataca ya se encuentra muerto");
                    if(t==0){
                        j1empieza();
                        break;
                    }else{
                        j2empieza();
                        break;
                    }
                }else{
            switch (pkd) {
                case "1":
                    if(saj1_1 <= 0 ){
                        System.out.println("El Pokemon que quiere atacar ya se encuentra muerto");
                        if(t==0){
                            j1empieza();
                            break;
                        }else{
                            j2empieza();
                            break;
                        }
                    }else{
                        saj1_1 = saj1_1 - atj2_2;
                        atsj2_2 ++;
                        defj1_1 ++;
                        validarVida();
                    }
                    break;
                case "2":
                    if(saj1_2 <= 0){
                        System.out.println("El Pokemon que quiere atacar ya se encuentra muerto");
                        if(t==0){
                            j1empieza();
                            break;
                        }else{
                            j2empieza();
                            break;
                        }
                    }else{
                        saj1_2 = saj1_2 - atj2_2;
                        atsj2_2 ++;
                        defj1_2 ++;
                        validarVida();
                    }
                    break;
                default:
                    System.out.println("Selecciona un valor correcto para el pokemon que quieres atacar");
                    if(t==0){
                        j1empieza();
                        break;
                    }else{
                        j2empieza();
                        break;
                    }
            }
                }   break;
            default:
                System.out.println("Selecciona un valor correcto para el pokemon que atacara");
                if(t==0){
                    j1empieza();
                    break;
                }else{
                    j2empieza();
                    break;
                }
        }
        
    }    
    
    //Metodo "Finalizador". En este asignamos todos los valores necesarios a la matriz de registro
    public void finalizador(){        
        //Numero de Partida
        mReg[contador-1][0] = String.valueOf(contador);
        //J1
        mReg[contador-1][1] = nj1;
        mReg[contador-1][2] = pkj1_1;
        mReg[contador-1][3] = pkj1_2;
        mReg[contador-1][4] = String.valueOf(atsj1_1);
        mReg[contador-1][5] = String.valueOf(defj1_1);
        mReg[contador-1][6] = String.valueOf(atsj1_2);
        mReg[contador-1][7] = String.valueOf(defj1_2);
        //J2
        mReg[contador-1][8] = nj2;
        mReg[contador-1][9] = pkj2_1;
        mReg[contador-1][10] = pkj2_2;
        mReg[contador-1][11] = String.valueOf(atsj2_1);
        mReg[contador-1][12] = String.valueOf(defj2_1);
        mReg[contador-1][13] = String.valueOf(atsj2_2);
        mReg[contador-1][14] = String.valueOf(defj2_2);
        //Ganador
        mReg[contador-1][15] = ganador;
        contador++;
        finalizarCombate();
    }
    
    //Realizar una validacion antes de cambiar el jugador activo donde revise el eg de cada jugador para realizar un break y la vida de cada Pokemon para cambiar su estado
    public void validarVida(){
        if(saj1_1 <=0){            
            ej1_1 = "Muerto";
            saj1_1 = 0;
        }
        if(saj1_2 <=0){            
            ej1_2 = "Muerto";
            saj1_2 = 0;
        }
        if(saj2_1 <=0){            
            ej2_1 = "Muerto";
            saj2_1 = 0;
        }
        if(saj2_2 <=0){            
            ej2_2 = "Muerto";
            saj2_2 = 0;
        }
        if(saj1_1 <= 0 && saj1_2 <= 0){
            eg1 = 0;
            ganador = nj2;
            
        }else if(saj2_1 <= 0 && saj2_2 <= 0){
            eg2 = 0;
            ganador = nj1;
        }
    }
    
    
    //Impresion de Datos para la Batalla
    public void imprimir(){
        
        //Impresion Datos Jugador 1
        System.out.println("--------------------------Jugador 1: " + nj1 + "--------------------------");
        System.out.println(img11);
        System.out.println("[ 1 ]");
        System.out.println("Nombre: " + pkj1_1);
        System.out.println("Puntos de Salud: " + saj1_1);
        System.out.println("Puntos de Ataque: " + atj1_1);
        System.out.println("Estado: " + ej1_1);
        System.out.println("");
        System.out.println(img12);
        System.out.println("[ 2 ]");
        System.out.println("Nombre: " + pkj1_2);
        System.out.println("Puntos de Salud: " + saj1_2);
        System.out.println("Puntos de Ataque: " + atj1_2);
        System.out.println("Estado: " + ej1_2);
        System.out.println("");
        System.out.println("");
        System.out.println("------------------------------------------------------------------------");
        System.out.println("JUGADOR ACTIVO:                                          " + ja);
        System.out.println("------------------------------------------------------------------------");
        System.out.println("");
        System.out.println("");
        //Impresion Datos Jugador 2
        System.out.println(img21);
        System.out.println("[ 1 ]");
        System.out.println("Nombre: " + pkj2_1);
        System.out.println("Puntos de Salud: " + saj2_1);
        System.out.println("Puntos de Ataque: " + atj2_1);
        System.out.println("Estado: " + ej2_1);
        System.out.println("");
        System.out.println(img22);
        System.out.println("[ 2 ]");
        System.out.println("Nombre: " + pkj2_2);
        System.out.println("Puntos de Salud: " + saj2_2);
        System.out.println("Puntos de Ataque: " + atj2_2);
        System.out.println("Estado: " + ej2_2);
        System.out.println("--------------------------Jugador 2: " + nj2 + "--------------------------");            
    }
    
    public void finalizarCombate(){
        System.out.println("--------------------------------------------------");
        System.out.println("-------------El combate ha finalizado-------------");
        System.out.println("Desea jugar otra vez o regresar al menu principal?");
        System.out.println("1 Otra vez |  Menu Principal");
        opt = leer.next();
        switch(opt){
            case "1":
                solicitarDatosBatalla();
                break;
            default:
                menuPrincipal();
                break;
        }
    }    
    
}
